#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ backend –±–µ–∑ base_url –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from flask import Flask, request, jsonify
    from flask_cors import CORS
    
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ backend –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    app = Flask(__name__)
    CORS(app)
    
    @app.route('/')
    def home():
        return jsonify({
            "message": "Career on Autopilot API —Ä–∞–±–æ—Ç–∞–µ—Ç!",
            "status": "ok",
            "endpoints": {
                "chat": "POST /chat",
                "employee": "GET /api/employee/<id>",
                "search": "POST /api/employees/search"
            }
        })
    
    @app.route('/chat', methods=['POST'])
    def handle_chat():
        data = request.get_json()
        if not data:
            return jsonify({"error": "Invalid JSON"}), 400
        
        user_query = data.get('query', '')
        user_role = data.get('role', 'employee')
        
        # –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –±–µ–∑ AI –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        if user_role == 'employee':
            response = f"–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–ª—É—á–∏–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å: '{user_query}'. –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –æ—Ç backend."
        else:
            response = f"HR –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω: '{user_query}'. –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤."
        
        return jsonify({"response": response})
    
    @app.route('/api/employee/<int:employee_id>', methods=['GET'])
    def get_employee_data(employee_id):
        return jsonify({
            "id": employee_id,
            "name": "Test Employee",
            "role": "Test Role",
            "status": "test_data"
        })
    
    @app.route('/api/employees/search', methods=['POST'])
    def search_employees():
        data = request.get_json()
        return jsonify({
            "employees": [
                {
                    "id": 1,
                    "name": "Test Candidate",
                    "role": "Test Role",
                    "match_score": 0.95
                }
            ]
        })
    
    print("üì° API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000")
    print("üß™ –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ AI - –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("-" * 50)
    
    app.run(host='0.0.0.0', port=5000, debug=True)
    
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã Flask –∏ flask-cors:")
    print("pip install flask flask-cors")
    sys.exit(1)
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    sys.exit(1)
